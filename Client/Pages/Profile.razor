@page "/profile"
@using Crm_WASM.ViewModels
@inject ProfileViewModel _profileViewModel
@using Crm_WASM.Shared.Models
@using System.Security.Claims
@inject AuthenticationStateProvider _authenticationStateProvider
@inject NavigationManager _navigationManager
<div class="window__container new-order__container">
    <div class="window__upper">
        <h2 class="auth__title">
            Мой профиль
        </h2>
    </div>
    <div class="window__lower new-order__lower">
        <div class="form-group">
            <label for="firstname">
                Имя
            </label>
            <input @bind-value="_profileViewModel.Name" id="firstname" type="text" class="new-order__input" placeholder="Имя" />
        </div>
        <div class="form-group">
            <label for="surname">
                Фамилия
            </label>
            <input @bind-value="_profileViewModel.Surname" id="surname" type="text" class="new-order__input" placeholder="Фамилия" />
        </div>
        <div class="form-group">
            <label for="lastname">
                Отчество
            </label>
            <input @bind-value="_profileViewModel.Lastname" id="lastname" type="text" class="new-order__input" placeholder="Отчество" />
        </div>
        <div class="form-group">
            <label for="email">
                E-mail
            </label>
            <input @bind-value="_profileViewModel.Email" id="email" type="text" class="new-order__input" placeholder="E-mail" />
        </div>
        <div class="form-group">
            <label for="phone">
                Номер телефона
            </label>
            <input @bind-value="_profileViewModel.PhoneNumber" id="phone" type="text" class="new-order__input" placeholder="Номер телефона" />
        </div>
        @* <button @onclick="LoadInfo" class="new-order btn">Получить данные</button>      *@
        <button @onclick="_profileViewModel.UpdateProfile" class="new-order btn">Изменить данные</button>
        <span>&nbsp;</span>
        @_profileViewModel.Message
    </div>
</div>


@code {
    

        protected override async Task OnInitializedAsync()
        {
            var authState = await _authenticationStateProvider.GetAuthenticationStateAsync();
            var customer = authState.User;

            if(customer.Identity.IsAuthenticated)
            {
                var claim = customer.FindFirst(c => c.Type == ClaimTypes.NameIdentifier);
                _profileViewModel.Id = Convert.ToInt64(claim?.Value);
                await _profileViewModel.GetProfile();
            }
            else
            {

            }
        }
        @* public async Task LoadInfo()
        {
            var authState = await _authenticationStateProvider.GetAuthenticationStateAsync();
            var customer = authState.User;

            if(customer.Identity.IsAuthenticated)
            {
                var claim = customer.FindFirst(c => c.Type == ClaimTypes.NameIdentifier);
                _profileViewModel.Id = Convert.ToInt64(claim?.Value);
                await _profileViewModel.GetProfile();
            }
            else
            {

            }
        } *@
}